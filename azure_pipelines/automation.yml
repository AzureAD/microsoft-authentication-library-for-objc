variables:
  - name: 'repositoryName' # Name of the repository
    value: 'AzureAD/microsoft-authentication-library-for-objc'

schedules:
# daily build will only be triggered if there is any change between the build and last successful build
- cron: "0 4 * * *"
  displayName: Daily 8 pm build
  branches:
    include:
    - dev
- cron: "0 20 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - dev
  always: true

trigger:
  branches:
      include:
      - release/*
      - hotfix/*

pr: none

pool:
  vmImage: 'macOS-14'

jobs:
- job: ui_automation
  displayName: 'Run MSAL UI automation'
  timeoutInMinutes: 360
  cancelTimeoutInMinutes: 5
  workspace:
    clean: all

  steps:
  - script: |
      system_profiler SPHardwareDataType | grep "Processor Name"
    displayName: 'Check System Information'
    
  - template: templates/tests-with-conf-file.yml

  - task: UsePythonVersion@0
    condition: failed()
    displayName: Use Python 3.x

  - bash: python3 -m pip install github3.py==2.0.0
    condition: failed()
    displayName: Install the github3.py REST API client for Python

  - task: PythonScript@0
    displayName: Create Issue if Pipeline fails
    condition: failed()
    inputs:
      scriptSource: inline
      script: |
        import github3
        import requests
        import textwrap
        from pprint import pprint
        from subprocess import run, PIPE

        auth_header = ""
        try:
            auth_header = run(["git", "config", "http.$(Build.Repository.URI).extraheader"], text=True, check=True, stdout=PIPE).stdout.strip()
        except Exception as e:
          pprint(e)
        class HTTPHardcodedHeaderAuth(requests.auth.AuthBase):
            def __call__(self, r):
                r.headers['Authorization'] = auth_header.replace("AUTHORIZATION: ", "")
                return r

        github = github3.GitHub()
        github.session.auth = HTTPHardcodedHeaderAuth()
        github_org, repo = "$(Build.Repository.Name)".split("/")
        
        # Prepare content for github issue
        pipeline_uri = "https://identitydivision.visualstudio.com/IDDP/_build/results?buildId=$(Build.BuildId)&view=logs"
        git_commit = "$(Build.SourceVersionMessage) [$(Build.SourceVersion)] "
        issue_title = "Automation tests failure"
        issue_body = '''@AzureAD/appleidentity \nAutomation failed for [$(repositoryName)]({0}) ran against commit : {1} \n Pipeline URL : [{2}]({2})'''.format('$(Build.Repository.Uri)', git_commit, pipeline_uri)
        github.create_issue(github_org, repo, issue_title, issue_body, labels=['automation failure'])

- job: e2e_test_native_auth_ios
  displayName: 'Run MSAL E2E tests for iOS native auth'
  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 5
  workspace:
    clean: all

  steps:
  - template: templates/tests-with-conf-file.yml
    parameters:
      schema: 'MSAL iOS Native Auth E2E Tests'
      full_path: 'build/Build/Products/MSAL iOS Native Auth E2E Tests_MSAL iOS Native Auth E2E Tests_iphonesimulator18.1-x86_64.xctestrun'
      destination: 'platform=iOS Simulator,name=iPhone 16,OS=18.1'
      sdk: 'iphonesimulator'
      retry_tests: 'false'

- job: e2e_test_native_auth_mac
  displayName: 'Run MSAL E2E tests for macOS native auth'
  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 5
  workspace:
    clean: all

  steps:
  - template: templates/tests-with-conf-file.yml
    parameters:
      schema: 'MSAL Mac Native Auth E2E Tests'
      full_path: 'build/Build/Products/MSAL Mac Native Auth E2E Tests_MSAL Mac Native Auth E2E Tests_macosx15.1-x86_64.xctestrun'
      destination: 'platform=macOS'
      sdk: 'macosx'
      retry_tests: 'false'

- job: cocoapods_lib_lint
  displayName: Run Cocoapods lib lint
  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 5
  strategy:
    maxParallel: 2
    matrix:
      STATIC_LIBRARY:
        args: "--fail-fast --allow-warnings --use-static-frameworks"
      DYNAMIC_LIBRARY:
        args: "--fail-fast --allow-warnings"
  workspace:
    clean: all
  
  steps:

  - checkout: self
    clean: true
    submodules: true
    fetchDepth: 1
    persistCredentials: true
    path: s

  - task: Bash@3
    displayName: Replace HEADER_SEARCH_PATHS for NativeAuth subspec in MSAL.podspec
    inputs:
      targetType: 'inline'
      script: |
        sed -i '' 's/"$SRCROOT\/MSAL"/__dir__/' MSAL.podspec
      workingDirectory: '$(Build.SourcesDirectory)'

  - task: Bash@3
    displayName: Run pod lib lint
    inputs:
      targetType: 'inline'
      script: |
        pod lib lint $(args)
      workingDirectory: '$(Build.SourcesDirectory)'

  - task: Bash@3
    displayName: Discard temporary changes made to MSAL.podspec
    inputs:
      targetType: 'inline'
      script: |
        git checkout -f -- MSAL.podspec
      workingDirectory: '$(Build.SourcesDirectory)'
