parameters:
  schema: 'MSAL Test Automation (iOS)'
  full_path: 'build/Build/Products/MSAL Test Automation (iOS)_iphonesimulator18.1-x86_64.xctestrun'
  destination: 'platform=iOS Simulator,name=iPhone 16,OS=18.1'
  sdk: 'iphonesimulator'
  retry_tests: 'true'

steps:
  - checkout: self
    clean: true
    submodules: true
    fetchDepth: 1
    persistCredentials: true
    path: s
    
  - task: Bash@3
    displayName: 'Select Xcode version'
    inputs:
      targetType: 'inline'
      script: '/bin/bash -c "sudo xcode-select -s /Applications/Xcode_16.1.app"'
  
  - task: Bash@3
    displayName: Go to project folder
    inputs:
      targetType: 'inline'
      script: |        
        cd $(Agent.BuildDirectory)/s
  
  - script: 'gem uninstall xcpretty -I --version 0.4.0'
    displayName: 'Uninstall xcpretty v0.4.0'
  
  - script: 'gem install xcpretty -v 0.3.0'
    displayName: 'Install xcpretty v0.3.0'

  - task: AzureCLI@2
    displayName: 'Read configuration from KeyVault'
    inputs:
      azureSubscription: 'AuthSdkResourceManager'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'python get_automation_conf_file.py'
      workingDirectory: azure_pipelines/scripts/
  - task: Bash@3
    displayName: Build for testing
    inputs:
      targetType: 'inline'
      script: |
        mv azure_pipelines/scripts/conf.json MSAL/test/automation/conf.json
        ruby TestRubyFile.rb
        xcodebuild build-for-testing \
          -workspace MSAL.xcworkspace \
          -scheme '${{ parameters.schema }}' \
          -sdk ${{ parameters.sdk }} \
          -destination '${{ parameters.destination }}' \
          -derivedDataPath 'build' \
          | tee xcodebuild.log \
          | xcpretty -c

  - task: Bash@3
    displayName: Run automations
    inputs:
      targetType: 'inline'
      script: |
        ls build/Build/Products/
        #Use retry-tests-on-failure only if tests don't already use "Maximum Test Repetitions"
        if ['${{ parameters.retry_tests }}' == 'true']; then
            xcodebuild test-without-building \
                -xctestrun '${{ parameters.full_path }}' \
                -destination '${{ parameters.destination }}' \
                -retry-tests-on-failure \
                -parallel-testing-enabled NO \
                -resultBundlePath '$(Agent.BuildDirectory)/s/test_output/report.xcresult'

        else
            xcodebuild test-without-building \
                -xctestrun '${{ parameters.full_path }}' \
                -destination '${{ parameters.destination }}' \
                -parallel-testing-enabled NO \
                -resultBundlePath '$(Agent.BuildDirectory)/s/test_output/report.xcresult'

        fi 

  # https://learn.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts?view=azure-devops&tabs=yaml#q-can-i-delete-pipeline-artifacts-when-re-running-failed-jobs
  - task: PublishPipelineArtifact@1
    condition: succeededOrFailed()
    inputs:
      targetPath: '$(Agent.BuildDirectory)/s/test_output/'
      artifactName: 'TestOutputs Attempt - $(System.StageAttempt) - ${{ parameters.schema }}'
      publishLocation: 'pipeline'
  
